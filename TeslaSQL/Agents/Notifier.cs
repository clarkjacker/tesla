using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data;
using TeslaSQL.DataUtils;

namespace TeslaSQL.Agents {
    /// <summary>
    /// This agent sends alerts that are generated by other agents.
    /// </summary>
    class Notifier : Agent {
        private IEmailClient emailClient;

        //base keyword invokes the base class's constructor
        public Notifier(Config config, IDataUtils dataUtils, IEmailClient emailClient)
            : base(config, dataUtils, null) {
            this.emailClient = emailClient;
        }

        public override void ValidateConfig() {
            Config.ValidateRequiredHost(config.relayServer);
            if (config.relayType == null) {
                throw new Exception("Notifier agent requires a valid SQL flavor for relay");
            }
        }

        public override void Run() {
            var errors = sourceDataUtils.GetUnsentErrors();
            var errorList = new List<string>();
            var ids = new List<int>();
            foreach (DataRow row in errors.Rows) {
                errorList.Add(row.Field<string>("CelError"));
                ids.Add(row.Field<int>("CelId"));
            }
            if (errorList.Count == 0) {
                return;
            }
            emailClient.SendEmail(config.emailErrorRecipient, "Errors occurred during changetracking", string.Join("\r\n", errorList));
            sourceDataUtils.MarkErrorsSent(ids);
        }
    }
}
